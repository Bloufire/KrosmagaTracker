<Window x:Class="AddOn_Krosmaga___Blou_fire.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AddOn_Krosmaga___Blou_fire"
        xmlns:conv="clr-namespace:AddOn_Krosmaga___Blou_fire.UIElements"
        xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        mc:Ignorable="d"
        Title="AddOn Krosmaga - Blou-fire" Width="850"
        Topmost="True"
        AllowsTransparency="True"
        Background="Transparent"
        WindowStyle="None" MouseDown="Window_MouseDown"
        ResizeMode="NoResize"
        >
    <Window.DataContext>
        <local:UIPlayerDatas/>
    </Window.DataContext>
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisConverter"/>
        <conv:InverseBooleanConverter x:Key="InvertBoolToVis"/>
        <conv:IntToCardCountStringConverter x:Key="IntToCardCountStringConverter" />
    </Window.Resources>
    <StackPanel Orientation="Vertical" Background="Transparent">
        <Grid HorizontalAlignment="Left" Background="Black" Width="250" Height="100">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="2*" />
                <RowDefinition Height="4*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Row="0" Grid.Column="1" Background="Red" Name="closeApp" Click="closeApp_Click" Width="15" Height="15" MaxHeight="15" MaxWidth="15" HorizontalAlignment="Right"/>
            <Grid Grid.Row="1" Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="4*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="{Binding OpponentPseudo, UpdateSourceTrigger=PropertyChanged}" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="White" FontWeight="Bold"/>
                <Label Content="{Binding OpponentLevel, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="White" FontWeight="Bold"/>
            </Grid>
            <Grid Grid.Row="2" Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Image Source="/Images/trophy.png" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Center"/>
                <Label Content="{Binding OpponentVictories, UpdateSourceTrigger=PropertyChanged}" Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="White" FontWeight="Bold"/>
                <Image Source="/Images/skull.png" Grid.Row="0" Grid.Column="2" HorizontalAlignment="Center"/>
                <Label Content="{Binding OpponentDefeats, UpdateSourceTrigger=PropertyChanged}" Grid.Row="0" Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="White" FontWeight="Bold"/>
                <Label Content="Turn :" Visibility="{Binding HasIndex, Converter={StaticResource BoolToVisConverter}}" Grid.Column="0" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="White" FontWeight="Bold"/>
                <Label Content="{Binding CurrentTurn, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding HasIndex, Converter={StaticResource BoolToVisConverter}}" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="White" FontWeight="Bold"/>
                <Image Source="/Images/fleau.png" Visibility="{Binding HasIndex, Converter={StaticResource BoolToVisConverter}}" Grid.Row="1" Grid.Column="2" HorizontalAlignment="Center"/>
                <Label Content="{Binding OpponentFleaux, UpdateSourceTrigger=PropertyChanged}" Grid.Column="3" Visibility="{Binding HasIndex, Converter={StaticResource BoolToVisConverter}}" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="White" FontWeight="Bold"/>
            </Grid>
            <Grid Grid.Row="2" Grid.Column="1">
                <ToggleButton Name="toggleDeckButton" Margin="8" Visibility="{Binding HasIndex, Converter={StaticResource BoolToVisConverter}}">
                    <Image Source="/Images/card.png" />
                </ToggleButton>
                <ToggleButton Name="toggleStatsDeckButton" Checked="toggleStatsDeckButton_Checked" Unchecked="toggleStatsDeckButton_Unchecked" Margin="8" Visibility="{Binding HasIndex, Converter={StaticResource InvertBoolToVis}}">
                    <Image Source="/Images/chart.png" />
                </ToggleButton>
            </Grid>
        </Grid>
        <Grid MaxHeight="400" MaxWidth="250" HorizontalAlignment="Left" Visibility="{Binding ElementName=toggleDeckButton, Path=IsChecked, Converter={StaticResource BoolToVisConverter}}">
            <ListView HorizontalAlignment="Left" Background="Black" ItemsSource="{Binding Deck, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="25" />
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Foreground="White" Content="{Binding Card.UIName}" HorizontalAlignment="Left"/>
                            <Label Grid.Column="1" Foreground="White" FontWeight="Bold" Content="{Binding CardCount, Converter={StaticResource IntToCardCountStringConverter}}" HorizontalAlignment="Right"/>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
        <Grid Name="statsGrid" Height="400" Background="Black" MaxWidth="850" Visibility="{Binding ElementName=toggleStatsDeckButton, Path=IsChecked, Converter={StaticResource BoolToVisConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="175"/>
            </Grid.ColumnDefinitions>
            <Grid Name="checkboxes" Grid.Column="0">
                <Grid.Resources>
                    <Style x:Key="Flag" TargetType="CheckBox">
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </Style.Triggers>

                        <Setter Property="BorderThickness" Value="2"/>

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="CheckBox">
                                    <Image Source="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <CheckBox Grid.Row="0" Name="Iop" Checked="CheckBox_Checked" Unchecked="CheckBox_Checked" HorizontalAlignment="Center" Content="/Images/Gods/Iop.png" Style="{StaticResource Flag}"/>
                <CheckBox Grid.Row="1" Name="Ecaflip" Checked="CheckBox_Checked" Unchecked="CheckBox_Checked" HorizontalAlignment="Center" Content="/Images/Gods/Eca.png" Style="{StaticResource Flag}"/>
                <CheckBox Grid.Row="2" Name="Cra"  Checked="CheckBox_Checked" Unchecked="CheckBox_Checked" HorizontalAlignment="Center" Content="/Images/Gods/Cra.png" Style="{StaticResource Flag}"/>
                <CheckBox Grid.Row="3" Name="Eniripsa" Checked="CheckBox_Checked" Unchecked="CheckBox_Checked" HorizontalAlignment="Center" Content="/Images/Gods/Eni.png" Style="{StaticResource Flag}"/>
                <CheckBox Grid.Row="4" Name="Sacrieur" Checked="CheckBox_Checked" Unchecked="CheckBox_Checked" HorizontalAlignment="Center" Content="/Images/Gods/Sacri.png" Style="{StaticResource Flag}"/>
                <CheckBox Grid.Row="5" Name="Sadida" Checked="CheckBox_Checked" Unchecked="CheckBox_Checked" HorizontalAlignment="Center" Content="/Images/Gods/Sadi.png" Style="{StaticResource Flag}"/>
                <CheckBox Grid.Row="6" Name="Sram" Checked="CheckBox_Checked" Unchecked="CheckBox_Checked" HorizontalAlignment="Center" Content="/Images/Gods/Sram.png" Style="{StaticResource Flag}"/>
                <CheckBox Grid.Row="7" Name="Xelor" Checked="CheckBox_Checked" Unchecked="CheckBox_Checked" HorizontalAlignment="Center" Content="/Images/Gods/Xel.png" Style="{StaticResource Flag}"/>
                <CheckBox Grid.Row="8" Name="Enutrof" Checked="CheckBox_Checked" Unchecked="CheckBox_Checked" HorizontalAlignment="Center" Content="/Images/Gods/Enu.png" Style="{StaticResource Flag}"/>
            </Grid>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <lvc:CartesianChart Grid.Row="0" Series="{Binding WinrateParClasse}" LegendLocation="None">
                    <lvc:CartesianChart.AxisX>
                        <lvc:Axis Separator="{Binding Separator}" Labels="{Binding Labels}"/>
                    </lvc:CartesianChart.AxisX>
                    <lvc:CartesianChart.AxisY>
                        <lvc:Axis Title="Winrate" LabelFormatter="{Binding Formatter}"/>
                    </lvc:CartesianChart.AxisY>
                </lvc:CartesianChart>
                <lvc:CartesianChart Grid.Row="1" Series="{Binding ToursParClasse}" LegendLocation="None">
                    <lvc:CartesianChart.AxisX>
                        <lvc:Axis Separator="{Binding Separator}" Labels="{Binding Labels}"/>
                    </lvc:CartesianChart.AxisX>
                    <lvc:CartesianChart.AxisY>
                        <lvc:Axis Title="Winrate" LabelFormatter="{Binding Formatter}"/>
                    </lvc:CartesianChart.AxisY>
                </lvc:CartesianChart>
            </Grid>
            <StackPanel Margin="15" Orientation="Vertical" Grid.Column="2">
                <Grid Height="35">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Image Source="/Images/trophy.png" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Center"/>
                    <Label Content="{Binding WinsForThisGroup, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="White" FontWeight="Bold"/>
                    <Image Source="/Images/skull.png" Grid.Row="0" Grid.Column="2" HorizontalAlignment="Center"/>
                    <Label Content="{Binding LosesForThisGroup, UpdateSourceTrigger=PropertyChanged}" Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="White" FontWeight="Bold"/>
                </Grid>
                <Grid Height="35">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label Content="Best MU :" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="White" FontWeight="Bold"/>
                    <Label Content="{Binding BestMU, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="White" FontWeight="Bold"/>
                </Grid>
                <Grid Height="35">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label Content="Worst MU :" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="White" FontWeight="Bold"/>
                    <Label Content="{Binding WorstMU, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="White" FontWeight="Bold"/>
                </Grid>
                <Grid Height="35">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="11*"/>
                        <ColumnDefinition Width="10*"/>
                    </Grid.ColumnDefinitions>
                    <Label Content="Moy. tours :" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="White" FontWeight="Bold"/>
                    <Label Content="{Binding NbToursMoy, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="White" FontWeight="Bold"/>
                </Grid>
            </StackPanel>
        </Grid>
    </StackPanel>
</Window>
